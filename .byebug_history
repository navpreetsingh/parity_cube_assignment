c
params
c
params
c
n
@check_out
params
c
current_user
@current_user
params
c
x
c
root_path
root_url
c
@room_ids
c
@rooms
n
c
params
@room_type_id
c
room_type_id
Booking.where("room_type_id = ? AND check_out <= ? AND check_in > ?", room_type_id, check_out, check_in).pluck(:room_id)
a = Room.where("room_type_id = ? AND id not in (SELECT bookings.room_id FROM bookings WHERE bookings.room_type_id = ? AND bookings.check_in = ? AND bookings.check_out = ?)", room_type_id, room_type_id, check_in, check_out)
a.first
a = Room.where("room_type_id = ? AND id not in (SELECT bookings.room_id FROM bookings WHERE bookings.room_type_id = ? AND bookings.check_in = ? AND bookings.check_out = ?)", room_type_id, room_type_id, check_in, check_out)
Room.where("room_type_id = ? AND id not in (SELECT bookings.room_id FROM bookings WHERE bookings.room_type_id = ? AND bookings.check_in = ? AND bookings.check_out = ?)", room_type_id, room_type_id, check_in, check_out)
Room.where("room_type_id = ? AND id not in (SELECT bookings.room_id FROM bookings WHERE bookings.room_type_id = ? AND bookings.check_in = ? AND bookings.check_out = ?)", room_type_id, room_type_id, check_in, check_out).to_a
Room.where("room_type_id = ? AND id not in (SELECT bookings.room_id FROM bookings WHERE bookings.room_type_id = ? AND bookings.check_in = ? AND bookings.check_out = ?)", room_type_id, room_type_id, check_in, check_out)
c
Booking
params
c
@rooms.each {|a| puts a.id}
@rooms.each {|a| puts a}
@rooms.class
@rooms.to_a
@rooms
n
@rooms
c
@room_type_id
n
c
params
@room_type_id
n
c
check_out
check_in
room_type_id
c
@rooms
n
c
 Room.available_rooms(@room_type_id, @check_in, @check_out)
@rooms
n
params[:room_type_id]
params
c
@rooms
c
rt.total_rooms * (index+1)
rt
n
rt
((rt.total_rooms * (index + 1)) - 1)
init
inti
index
c
index
c
index
c
room_number
